class Solution {
    // Function to detect cycle in an undirected graph.
    public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        boolean visited[]=new boolean[V];
        
         for(int i=0;i<V;i++)
            if(visited[i]==false)
                if(dfs(i,-1,adj,visited))
                    return true;
        return false;
    }
    
    boolean dfs(int src,int parent,ArrayList<ArrayList<Integer>> adj,boolean visited[]){
        visited[src]=true;
        for(int i:adj.get(src)){
            if(visited[i]==false){
                if(dfs(i,src,adj,visited))
                    return true;
            }
            else if(i!=parent) return true;
        }
        return false;
    }
}
