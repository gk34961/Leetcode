/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Stack<TreeNode> parent=new Stack<>();
        Stack<TreeNode> child=new Stack<>();
        boolean leftToRight = true;
        parent.add(root);
        
        List<List<Integer>> list=new ArrayList<>();
        if(root==null) return list;
        List<Integer> level = new ArrayList<>();
        
        while(!parent.isEmpty()){
            TreeNode temp=parent.pop();
                level.add(temp.val);
            if(leftToRight){
                if(temp.left!=null) child.add(temp.left);
                if(temp.right!=null) child.add(temp.right);
            }
            else{
                if(temp.right!=null) child.add(temp.right);
                if(temp.left!=null) child.add(temp.left);
            }
            if(parent.isEmpty()){
                parent=child;
                child=new Stack<>();
                leftToRight=!leftToRight;
                list.add(level);
                level=new ArrayList<>();
            }
        }
        return list;
    }
}
