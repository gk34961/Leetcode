class Solution{
    int longestCommonSubstr(String S1, String S2, int n, int m){
        // code here
        int max=0;
        int count=0;
        int result[][]=new int[n+1][m+1];
        
        for(int i=0;i<=n;i++){
            for(int j=0;j<=m;j++){
                if(i==0||j==0) result[i][j]=0;
                else{
                    if(S1.charAt(i-1)==S2.charAt(j-1)){
                        result[i][j]=result[i-1][j-1]+1;
                        max=Math.max(max,result[i][j]);
                    }
                }
            }
        }
        return max;
    }
}
====================================================================================================================================================================================
modified
====================================================================================================================================================================================
class Solution{
    int longestCommonSubstr(String S1, String S2, int n, int m){
        int dp[][]=new int[n+1][m+1];
        int max=0;
        
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(S1.charAt(i-1)==S2.charAt(j-1)) {
                    dp[i][j]=dp[i-1][j-1]+1;
                    max=Math.max(max,dp[i][j]);
                }
            }
        }
        return max;
    }
}
