class Solution {
    public int majorityElement(int[] nums) {
        int n=nums.length;
        int limit=n/2;
        Map<Integer,Integer> map=new HashMap<>();
        
        for(int i=0;i<n;i++){
            if(map.containsKey(nums[i])) map.put(nums[i],map.get(nums[i])+1);
            else 
                map.put(nums[i],1);
            if(map.get(nums[i])>limit) return nums[i];
            
        }
        return 0;
    }
}

//
class Solution {
    public int majorityElement(int[] nums) {
        Arrays.sort(nums);
    return nums[nums.length/2];
    }
}
//
class Solution {
    public int majorityElement(int[] nums) {
        int person=0;
        int count=0;
        for(int num:nums){
            if(count==0) person=num;
            if(person==num) count++;
            else count--;       
        }
        return person;
    }
}
