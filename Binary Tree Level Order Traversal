/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> ret=new ArrayList<>();
        if(root==null) return ret;
        Queue<TreeNode> queue=new LinkedList<TreeNode>();
        queue.offer(root);
        
        while(!queue.isEmpty())
        {
            int size=queue.size();
            List<Integer> currentLevel =new ArrayList<>();
            while(size-->0){
                TreeNode tempNode=queue.poll();
                currentLevel.add(tempNode.val);
            
                if(tempNode.left!=null) queue.add(tempNode.left);
                if(tempNode.right!=null)queue.add(tempNode.right);
            }
            ret.add(currentLevel);
        }
        return ret;
    }
}
